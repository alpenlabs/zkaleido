use crate::{
    input::ZkVmInputBuilder, PerformanceReport, ZkVmProver, ZkVmRemoteProver, ZkVmVerifier,
};

/// A trait implemented by the host of a zkVM program.
///
/// In a zkVM application, the host is the machine that runs the zkVM instance.
/// It is responsible for setting up the zkVM environment and managing the input/output
/// operations during execution. This includes loading the program, providing necessary
/// inputs, and handling outputs after execution.
///
/// The host combines the capabilities of both a zkVM prover and a zkVM verifier, as
/// indicated by its inheritance from the `ZkVmProver` and `ZkVmVerifier` traits.
pub trait ZkVmHost: ZkVmProver + ZkVmVerifier {}

/// Extends the [`ZkVmHost`] trait by providing functionality to generate performance reports.
///
/// This trait introduces an additional method, `perf_report`, which accepts an input
/// constructed by the associated [`ZkVmInputBuilder`] and returns a [`PerformanceReport`].
pub trait ZkVmHostPerf: ZkVmHost {
    /// Produces a performance report based on the provided input.
    ///
    /// # Parameters
    /// - `input`: The input generated by a type implementing [`ZkVmInputBuilder`].
    ///
    /// # Returns
    /// A [`PerformanceReport`] containing metrics and other performance-related data
    /// gathered from the execution of the zero-knowledge VM.
    fn perf_report<'a>(
        &self,
        input: <Self::Input<'a> as ZkVmInputBuilder<'a>>::Input,
    ) -> PerformanceReport;
}

/// A trait implemented by the host of a zkVM program with support for remote proving operations.
pub trait ZkVmRemoteHost: ZkVmHost + ZkVmRemoteProver {}
